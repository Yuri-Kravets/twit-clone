import {connectToDB} from "@/lib/mongodb";
import {NextResponse} from "next/server";
import {Tweet} from "@/models/tweet";

export async function PATCH(req: Request, {params}: {params: {id: string}}) {
    console.log("üî• PATCH —Ä–æ—É—Ç –≤—ã–∑–≤–∞–Ω");
    try {
        const body = await req.json();
        const {type} = body;

        console.log("üëâ PATCH –≤—ã–∑–≤–∞–Ω –¥–ª—è —Ç–≤–∏—Ç–∞ —Å ID:", params.id);
        console.log("üì¶ –¢–∏–ø —Ä–µ–∞–∫—Ü–∏–∏:", type);

        await connectToDB();
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");

        const update = type === 'like'
            ? {$inc: {'reactions.likes': 1}}
            : {$inc: {'reactions.dislikes': 1}};

        console.log("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–æ:", update);

        const tweet = await Tweet.findByIdAndUpdate(params.id, update, {new: true});

        if (!tweet) {
            console.log("‚ùå –¢–≤–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ");
            return NextResponse.json({message: 'Tweet not found'}, {status: 404});
        }

        console.log("‚úÖ –¢–≤–∏—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω:", tweet);
        return NextResponse.json(tweet, {status: 200});

    } catch (error) {
        console.error("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–≤–∏—Ç–∞:", error);
        return NextResponse.json({message: 'Failed to update reactions'}, {status: 500});
    }
}

// import {connectToDB} from "@/lib/mongodb";
// import {NextResponse} from "next/server";
// import {Tweet} from "@/models/tweet";
//
//
// export async function PATCH(req: Request, {params}: {params: {id: string}}) {
//     try {
//         const {type} = await req.json();
//         await connectToDB();
//
//         const update = type === 'like' ? {$inc: {'reactions.likes' : 1}} : {$inc: {'reactions.dislikes' : 1}}
//
//         const tweet = await Tweet.findByIdAndUpdate(params.id, update, {new: true})
//
//         if (!tweet) {
//             return NextResponse.json({message: 'Tweet not found'}, {status: 404})
//         }
//         return NextResponse.json(tweet, { status: 200 })
//     } catch (error) {
//         return NextResponse.json({message: 'Failed to update reactions' }, {status: 500})
//     }
//
//     //return NextResponse.json(tweet, {status: 200})
// }